/*
 * This file is generated by jOOQ.
 */
package org.example.soa_lab2_LabService.generated.jooq.s311690;


import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.Accessory;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.Account;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.Buyer;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.BuyerOrder;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.Car;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.CarBrand;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.CarPart;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.CarToCarPart;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.Consumable;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.DisciplineLabs;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.DisciplineRef;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.LabRef;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.Review;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.Seller;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.SellerAccessory;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.SellerCarPart;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.SellerConsumable;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.SerialNumber;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.ShoppingCart;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.ShoppingCartEntry;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.records.AccessoryRecord;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.records.AccountRecord;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.records.BuyerOrderRecord;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.records.BuyerRecord;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.records.CarBrandRecord;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.records.CarPartRecord;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.records.CarRecord;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.records.CarToCarPartRecord;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.records.ConsumableRecord;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.records.DisciplineLabsRecord;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.records.DisciplineRefRecord;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.records.LabRefRecord;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.records.ReviewRecord;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.records.SellerAccessoryRecord;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.records.SellerCarPartRecord;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.records.SellerConsumableRecord;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.records.SellerRecord;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.records.SerialNumberRecord;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.records.ShoppingCartEntryRecord;
import org.example.soa_lab2_LabService.generated.jooq.s311690.tables.records.ShoppingCartRecord;
import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccessoryRecord> ACCESSORY_PKEY = Internal.createUniqueKey(Accessory.ACCESSORY, DSL.name("accessory_pkey"), new TableField[] { Accessory.ACCESSORY.ID }, true);
    public static final UniqueKey<AccountRecord> ACCOUNT_PKEY = Internal.createUniqueKey(Account.ACCOUNT, DSL.name("account_pkey"), new TableField[] { Account.ACCOUNT.ID }, true);
    public static final UniqueKey<BuyerRecord> BUYER_PKEY = Internal.createUniqueKey(Buyer.BUYER, DSL.name("buyer_pkey"), new TableField[] { Buyer.BUYER.ID }, true);
    public static final UniqueKey<BuyerOrderRecord> BUYER_ORDER_PKEY = Internal.createUniqueKey(BuyerOrder.BUYER_ORDER, DSL.name("buyer_order_pkey"), new TableField[] { BuyerOrder.BUYER_ORDER.SHOPPING_CART_ID }, true);
    public static final UniqueKey<CarRecord> CAR_MODEL_KEY = Internal.createUniqueKey(Car.CAR, DSL.name("car_model_key"), new TableField[] { Car.CAR.MODEL }, true);
    public static final UniqueKey<CarRecord> CAR_PKEY = Internal.createUniqueKey(Car.CAR, DSL.name("car_pkey"), new TableField[] { Car.CAR.ID }, true);
    public static final UniqueKey<CarBrandRecord> CAR_BRAND_NAME_KEY = Internal.createUniqueKey(CarBrand.CAR_BRAND, DSL.name("car_brand_name_key"), new TableField[] { CarBrand.CAR_BRAND.NAME }, true);
    public static final UniqueKey<CarBrandRecord> CAR_BRAND_PKEY = Internal.createUniqueKey(CarBrand.CAR_BRAND, DSL.name("car_brand_pkey"), new TableField[] { CarBrand.CAR_BRAND.ID }, true);
    public static final UniqueKey<CarPartRecord> CAR_PART_PKEY = Internal.createUniqueKey(CarPart.CAR_PART, DSL.name("car_part_pkey"), new TableField[] { CarPart.CAR_PART.ID }, true);
    public static final UniqueKey<CarToCarPartRecord> CAR_TO_CAR_PART_PKEY = Internal.createUniqueKey(CarToCarPart.CAR_TO_CAR_PART, DSL.name("car_to_car_part_pkey"), new TableField[] { CarToCarPart.CAR_TO_CAR_PART.CAR_ID, CarToCarPart.CAR_TO_CAR_PART.CAR_PART_ID }, true);
    public static final UniqueKey<ConsumableRecord> CONSUMABLE_PKEY = Internal.createUniqueKey(Consumable.CONSUMABLE, DSL.name("consumable_pkey"), new TableField[] { Consumable.CONSUMABLE.ID }, true);
    public static final UniqueKey<DisciplineRefRecord> DISCIPLINE_REF_PKEY = Internal.createUniqueKey(DisciplineRef.DISCIPLINE_REF, DSL.name("discipline_ref_pkey"), new TableField[] { DisciplineRef.DISCIPLINE_REF.ID }, true);
    public static final UniqueKey<LabRefRecord> LAB_REF_PKEY = Internal.createUniqueKey(LabRef.LAB_REF, DSL.name("lab_ref_pkey"), new TableField[] { LabRef.LAB_REF.ID }, true);
    public static final UniqueKey<ReviewRecord> REVIEW_PKEY = Internal.createUniqueKey(Review.REVIEW, DSL.name("review_pkey"), new TableField[] { Review.REVIEW.ID }, true);
    public static final UniqueKey<SellerRecord> SELLER_NAME_KEY = Internal.createUniqueKey(Seller.SELLER, DSL.name("seller_name_key"), new TableField[] { Seller.SELLER.NAME }, true);
    public static final UniqueKey<SellerRecord> SELLER_PKEY = Internal.createUniqueKey(Seller.SELLER, DSL.name("seller_pkey"), new TableField[] { Seller.SELLER.ID }, true);
    public static final UniqueKey<SellerAccessoryRecord> SELLER_ACCESSORY_PKEY = Internal.createUniqueKey(SellerAccessory.SELLER_ACCESSORY, DSL.name("seller_accessory_pkey"), new TableField[] { SellerAccessory.SELLER_ACCESSORY.SELLER_ID, SellerAccessory.SELLER_ACCESSORY.ACCESSORY_ID }, true);
    public static final UniqueKey<SellerCarPartRecord> SELLER_CAR_PART_PKEY = Internal.createUniqueKey(SellerCarPart.SELLER_CAR_PART, DSL.name("seller_car_part_pkey"), new TableField[] { SellerCarPart.SELLER_CAR_PART.SELLER_ID, SellerCarPart.SELLER_CAR_PART.CAR_PART_ID }, true);
    public static final UniqueKey<SellerConsumableRecord> SELLER_CONSUMABLE_PKEY = Internal.createUniqueKey(SellerConsumable.SELLER_CONSUMABLE, DSL.name("seller_consumable_pkey"), new TableField[] { SellerConsumable.SELLER_CONSUMABLE.SELLER_ID, SellerConsumable.SELLER_CONSUMABLE.CONSUMABLE_ID }, true);
    public static final UniqueKey<SerialNumberRecord> SERIAL_NUMBER_PKEY = Internal.createUniqueKey(SerialNumber.SERIAL_NUMBER, DSL.name("serial_number_pkey"), new TableField[] { SerialNumber.SERIAL_NUMBER.ID }, true);
    public static final UniqueKey<ShoppingCartRecord> SHOPPING_CART_PKEY = Internal.createUniqueKey(ShoppingCart.SHOPPING_CART, DSL.name("shopping_cart_pkey"), new TableField[] { ShoppingCart.SHOPPING_CART.ID }, true);
    public static final UniqueKey<ShoppingCartEntryRecord> SHOPPING_CART_ENTRY_PKEY = Internal.createUniqueKey(ShoppingCartEntry.SHOPPING_CART_ENTRY, DSL.name("shopping_cart_entry_pkey"), new TableField[] { ShoppingCartEntry.SHOPPING_CART_ENTRY.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AccessoryRecord, CarBrandRecord> ACCESSORY__ACCESSORY_CAR_BRAND_ID_FKEY = Internal.createForeignKey(Accessory.ACCESSORY, DSL.name("accessory_car_brand_id_fkey"), new TableField[] { Accessory.ACCESSORY.CAR_BRAND_ID }, Keys.CAR_BRAND_PKEY, new TableField[] { CarBrand.CAR_BRAND.ID }, true);
    public static final ForeignKey<AccessoryRecord, SerialNumberRecord> ACCESSORY__ACCESSORY_SERIAL_NUMBER_FKEY = Internal.createForeignKey(Accessory.ACCESSORY, DSL.name("accessory_serial_number_fkey"), new TableField[] { Accessory.ACCESSORY.SERIAL_NUMBER }, Keys.SERIAL_NUMBER_PKEY, new TableField[] { SerialNumber.SERIAL_NUMBER.ID }, true);
    public static final ForeignKey<BuyerRecord, AccountRecord> BUYER__BUYER_ACCOUNT_ID_FKEY = Internal.createForeignKey(Buyer.BUYER, DSL.name("buyer_account_id_fkey"), new TableField[] { Buyer.BUYER.ACCOUNT_ID }, Keys.ACCOUNT_PKEY, new TableField[] { Account.ACCOUNT.ID }, true);
    public static final ForeignKey<BuyerOrderRecord, BuyerRecord> BUYER_ORDER__BUYER_ORDER_BUYER_ID_FKEY = Internal.createForeignKey(BuyerOrder.BUYER_ORDER, DSL.name("buyer_order_buyer_id_fkey"), new TableField[] { BuyerOrder.BUYER_ORDER.BUYER_ID }, Keys.BUYER_PKEY, new TableField[] { Buyer.BUYER.ID }, true);
    public static final ForeignKey<BuyerOrderRecord, ShoppingCartRecord> BUYER_ORDER__BUYER_ORDER_SHOPPING_CART_ID_FKEY = Internal.createForeignKey(BuyerOrder.BUYER_ORDER, DSL.name("buyer_order_shopping_cart_id_fkey"), new TableField[] { BuyerOrder.BUYER_ORDER.SHOPPING_CART_ID }, Keys.SHOPPING_CART_PKEY, new TableField[] { ShoppingCart.SHOPPING_CART.ID }, true);
    public static final ForeignKey<CarRecord, CarBrandRecord> CAR__CAR_CAR_BRAND_ID_FKEY = Internal.createForeignKey(Car.CAR, DSL.name("car_car_brand_id_fkey"), new TableField[] { Car.CAR.CAR_BRAND_ID }, Keys.CAR_BRAND_PKEY, new TableField[] { CarBrand.CAR_BRAND.ID }, true);
    public static final ForeignKey<CarPartRecord, SerialNumberRecord> CAR_PART__CAR_PART_SERIAL_NUMBER_FKEY = Internal.createForeignKey(CarPart.CAR_PART, DSL.name("car_part_serial_number_fkey"), new TableField[] { CarPart.CAR_PART.SERIAL_NUMBER }, Keys.SERIAL_NUMBER_PKEY, new TableField[] { SerialNumber.SERIAL_NUMBER.ID }, true);
    public static final ForeignKey<CarToCarPartRecord, CarRecord> CAR_TO_CAR_PART__CAR_TO_CAR_PART_CAR_ID_FKEY = Internal.createForeignKey(CarToCarPart.CAR_TO_CAR_PART, DSL.name("car_to_car_part_car_id_fkey"), new TableField[] { CarToCarPart.CAR_TO_CAR_PART.CAR_ID }, Keys.CAR_PKEY, new TableField[] { Car.CAR.ID }, true);
    public static final ForeignKey<CarToCarPartRecord, CarPartRecord> CAR_TO_CAR_PART__CAR_TO_CAR_PART_CAR_PART_ID_FKEY = Internal.createForeignKey(CarToCarPart.CAR_TO_CAR_PART, DSL.name("car_to_car_part_car_part_id_fkey"), new TableField[] { CarToCarPart.CAR_TO_CAR_PART.CAR_PART_ID }, Keys.CAR_PART_PKEY, new TableField[] { CarPart.CAR_PART.ID }, true);
    public static final ForeignKey<ConsumableRecord, SerialNumberRecord> CONSUMABLE__CONSUMABLE_SERIAL_NUMBER_FKEY = Internal.createForeignKey(Consumable.CONSUMABLE, DSL.name("consumable_serial_number_fkey"), new TableField[] { Consumable.CONSUMABLE.SERIAL_NUMBER }, Keys.SERIAL_NUMBER_PKEY, new TableField[] { SerialNumber.SERIAL_NUMBER.ID }, true);
    public static final ForeignKey<DisciplineLabsRecord, LabRefRecord> DISCIPLINE_LABS__FK7SJ655VMFV8UNMBBTTLD2X0OB = Internal.createForeignKey(DisciplineLabs.DISCIPLINE_LABS, DSL.name("fk7sj655vmfv8unmbbttld2x0ob"), new TableField[] { DisciplineLabs.DISCIPLINE_LABS.LAB_ID }, Keys.LAB_REF_PKEY, new TableField[] { LabRef.LAB_REF.ID }, true);
    public static final ForeignKey<DisciplineLabsRecord, DisciplineRefRecord> DISCIPLINE_LABS__FKKBQI5T86PN9ACA4Q4PQANGH1C = Internal.createForeignKey(DisciplineLabs.DISCIPLINE_LABS, DSL.name("fkkbqi5t86pn9aca4q4pqangh1c"), new TableField[] { DisciplineLabs.DISCIPLINE_LABS.DISCIPLINE_ID }, Keys.DISCIPLINE_REF_PKEY, new TableField[] { DisciplineRef.DISCIPLINE_REF.ID }, true);
    public static final ForeignKey<ReviewRecord, BuyerRecord> REVIEW__REVIEW_BUYER_ID_FKEY = Internal.createForeignKey(Review.REVIEW, DSL.name("review_buyer_id_fkey"), new TableField[] { Review.REVIEW.BUYER_ID }, Keys.BUYER_PKEY, new TableField[] { Buyer.BUYER.ID }, true);
    public static final ForeignKey<ReviewRecord, SerialNumberRecord> REVIEW__REVIEW_SERIAL_NUMBER_FKEY = Internal.createForeignKey(Review.REVIEW, DSL.name("review_serial_number_fkey"), new TableField[] { Review.REVIEW.SERIAL_NUMBER }, Keys.SERIAL_NUMBER_PKEY, new TableField[] { SerialNumber.SERIAL_NUMBER.ID }, true);
    public static final ForeignKey<SellerRecord, AccountRecord> SELLER__SELLER_ACCOUNT_ID_FKEY = Internal.createForeignKey(Seller.SELLER, DSL.name("seller_account_id_fkey"), new TableField[] { Seller.SELLER.ACCOUNT_ID }, Keys.ACCOUNT_PKEY, new TableField[] { Account.ACCOUNT.ID }, true);
    public static final ForeignKey<SellerAccessoryRecord, AccessoryRecord> SELLER_ACCESSORY__SELLER_ACCESSORY_ACCESSORY_ID_FKEY = Internal.createForeignKey(SellerAccessory.SELLER_ACCESSORY, DSL.name("seller_accessory_accessory_id_fkey"), new TableField[] { SellerAccessory.SELLER_ACCESSORY.ACCESSORY_ID }, Keys.ACCESSORY_PKEY, new TableField[] { Accessory.ACCESSORY.ID }, true);
    public static final ForeignKey<SellerAccessoryRecord, SellerRecord> SELLER_ACCESSORY__SELLER_ACCESSORY_SELLER_ID_FKEY = Internal.createForeignKey(SellerAccessory.SELLER_ACCESSORY, DSL.name("seller_accessory_seller_id_fkey"), new TableField[] { SellerAccessory.SELLER_ACCESSORY.SELLER_ID }, Keys.SELLER_PKEY, new TableField[] { Seller.SELLER.ID }, true);
    public static final ForeignKey<SellerCarPartRecord, CarPartRecord> SELLER_CAR_PART__SELLER_CAR_PART_CAR_PART_ID_FKEY = Internal.createForeignKey(SellerCarPart.SELLER_CAR_PART, DSL.name("seller_car_part_car_part_id_fkey"), new TableField[] { SellerCarPart.SELLER_CAR_PART.CAR_PART_ID }, Keys.CAR_PART_PKEY, new TableField[] { CarPart.CAR_PART.ID }, true);
    public static final ForeignKey<SellerCarPartRecord, SellerRecord> SELLER_CAR_PART__SELLER_CAR_PART_SELLER_ID_FKEY = Internal.createForeignKey(SellerCarPart.SELLER_CAR_PART, DSL.name("seller_car_part_seller_id_fkey"), new TableField[] { SellerCarPart.SELLER_CAR_PART.SELLER_ID }, Keys.SELLER_PKEY, new TableField[] { Seller.SELLER.ID }, true);
    public static final ForeignKey<SellerConsumableRecord, ConsumableRecord> SELLER_CONSUMABLE__SELLER_CONSUMABLE_CONSUMABLE_ID_FKEY = Internal.createForeignKey(SellerConsumable.SELLER_CONSUMABLE, DSL.name("seller_consumable_consumable_id_fkey"), new TableField[] { SellerConsumable.SELLER_CONSUMABLE.CONSUMABLE_ID }, Keys.CONSUMABLE_PKEY, new TableField[] { Consumable.CONSUMABLE.ID }, true);
    public static final ForeignKey<SellerConsumableRecord, SellerRecord> SELLER_CONSUMABLE__SELLER_CONSUMABLE_SELLER_ID_FKEY = Internal.createForeignKey(SellerConsumable.SELLER_CONSUMABLE, DSL.name("seller_consumable_seller_id_fkey"), new TableField[] { SellerConsumable.SELLER_CONSUMABLE.SELLER_ID }, Keys.SELLER_PKEY, new TableField[] { Seller.SELLER.ID }, true);
    public static final ForeignKey<ShoppingCartRecord, BuyerRecord> SHOPPING_CART__SHOPPING_CART_BUYER_ID_FKEY = Internal.createForeignKey(ShoppingCart.SHOPPING_CART, DSL.name("shopping_cart_buyer_id_fkey"), new TableField[] { ShoppingCart.SHOPPING_CART.BUYER_ID }, Keys.BUYER_PKEY, new TableField[] { Buyer.BUYER.ID }, true);
    public static final ForeignKey<ShoppingCartEntryRecord, SerialNumberRecord> SHOPPING_CART_ENTRY__SHOPPING_CART_ENTRY_SERIAL_NUMBER_FKEY = Internal.createForeignKey(ShoppingCartEntry.SHOPPING_CART_ENTRY, DSL.name("shopping_cart_entry_serial_number_fkey"), new TableField[] { ShoppingCartEntry.SHOPPING_CART_ENTRY.SERIAL_NUMBER }, Keys.SERIAL_NUMBER_PKEY, new TableField[] { SerialNumber.SERIAL_NUMBER.ID }, true);
    public static final ForeignKey<ShoppingCartEntryRecord, ShoppingCartRecord> SHOPPING_CART_ENTRY__SHOPPING_CART_ENTRY_SHOPPING_CART_ID_FKEY = Internal.createForeignKey(ShoppingCartEntry.SHOPPING_CART_ENTRY, DSL.name("shopping_cart_entry_shopping_cart_id_fkey"), new TableField[] { ShoppingCartEntry.SHOPPING_CART_ENTRY.SHOPPING_CART_ID }, Keys.SHOPPING_CART_PKEY, new TableField[] { ShoppingCart.SHOPPING_CART.ID }, true);
}
